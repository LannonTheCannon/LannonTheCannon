from tkinter import *
from PIL import ImageTk, Image
from tkinter import ttk
import random
import tkinter.messagebox
import csv
import pygame 
from tkinter import Tk, Canvas
from datetime import date, datetime

def get_events():
    list_events = []
    with open('events.txt','r') as file1:
        for line in file1:
            line = line.rstrip('\n')
            current_event = line.split(',')
            event_date = datetime.strptime(current_event[1],'%m/%d/%y').date()
            current_event[1] = event_date
            list_events.append(current_event)
    return(list_events)

def days_between_dates(date1, date2):
    time_between = str(date1 - date2)
    number_of_days = time_between.split(' ')
    return number_of_days[0]

def send():

    newQuery = query.get().lower().split() 

    if newQuery[0] == 'add' and newQuery[2] == 'points': 
        points = int(newQuery[1]) 
        itemNum = int(newQuery[5])
        if itemNum == 1: 
            progressA['value'] = points



    # virus_status = random.choice((True,False))
    # if virus_status:
    #     OUT_BOX.configure(text = 'VIRUS STATUS : NOT FOUND', wraplength = 400, fg = 'green2')

    #     pixelChange1(pixelList15)
    #     message1 = 'Hi, Welcome to Creative Core. I\'m WATSON, a data science chatter bot. How can I help you?'
    #     print_general(message1, 10, 12, 200, 'system', green_col)



    # else:
    #     OUT_BOX.configure(text = 'VIRUS STATUS : FOUND', wraplength = 400, fg = 'green2', anchor = CENTER)
    #     pixelChange1(pixelListTalk)

    #     message1 = 'What is the meaning of the universe !?'
    #     print_general(message1, 10, 12, 200, 'system', green_col)

def back():
	pass 

def forward(): 
	pass 

def waithere(duration):
    var = IntVar()
    root.after(duration, var.set, 1)
    root.wait_variable(var)

def print_general(message, duration, size, wraplen, font_n, col):
	string_output = ''
	for char in message: 
		string_output += char 
		OUTPUT_BOX.config(text = string_output, font = f'{font_n} {size}',
			wraplength = wraplen, justify = LEFT, fg = col, pady = 2) 

		waithere(duration)

def pixelChange1(pixel_list):
    pixelNum = 0
    for column in range(9, canvasSize + 5, pixelSize):
        for row in range(5, canvasSize + 5, pixelSize ):
            CANV_1.create_rectangle(row, column, row + pixelSize, column  + pixelSize,
                                       fill = pixel_list[pixelNum])
            pixelNum = pixelNum + 1
            waithere(1)

root = Tk() 
root.title('Creative Core Expert Systems')
root.geometry('1150x600+0+0')
root.configure(background = 'grey')

red_col = 'red'
green_col = 'green2'

virus_status = False

pixelSize = 7
canvasSize = 7 * 16
Picture1 = PhotoImage(file = 'Profile.gif')

pixelList8 = ["#555555", "#8E8E8E", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#00FF00", "#00FF00", "#00FF00", "#000000", "#000000", "#00FF00", "#00FF00", "#00FF00", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#00FF00", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#00FF00", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#00FF00", "#00FF00", "#000000", "#000000", "#00FF00", "#00FF00", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#00FF00", "#00FF00", "#000000", "#000000", "#00FF00", "#00FF00", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#00FF00", "#00FF00", "#000000", "#000000", "#00FF00", "#00FF00", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#00FF00", "#00FF00", "#00FF00", "#00FF00", "#00FF00", "#00FF00", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#00FF00", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#00FF00", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#00FF00", "#00FF00", "#00FF00", "#00FF00", "#00FF00", "#00FF00", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", ]
pixelList
pixelList
pixelList
pixelList
pixelList13 = ["#555555", "#8E8E8E", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#00FF00", "#00FF00", "#00FF00", "#000000", "#000000", "#00FF00", "#00FF00", "#00FF00", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#00FF00", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#00FF00", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#00FF00", "#000000", "#000000", "#00FF00", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#00FF00", "#00FF00", "#000000", "#000000", "#00FF00", "#00FF00", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#00FF00", "#00FF00", "#00FF00", "#00FF00", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#00FF00", "#000000", "#000000", "#000000", "#000000", "#00FF00", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#00FF00", "#000000", "#000000", "#000000", "#000000", "#00FF00", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#00FF00", "#00FF00", "#00FF00", "#00FF00", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#C7C7C7", "#555555", "#8E8E8E", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", "#C7C7C7", ]
pixelList
pixelList
pixelList
pixelList
pixelListSage
pixelList
pixelListTalk


query = StringVar() 

MAINFRAME = Frame(root, bd = 10, bg = 'grey', relief = SUNKEN, 
	width = 1110, height = 500)
MAINFRAME.pack(side = TOP, padx = 8, pady = 8)

DATAFRAME = Frame(MAINFRAME, bd = 10, bg = 'grey', relief = SUNKEN, 
	width = 870, height = 550, padx = 4, pady = 4)
DATAFRAME.pack(side = RIGHT, fill = BOTH, expand = True)

####################################################################################################

####################################################################################################

DATAFRAME_ONE = Frame(DATAFRAME, bd = 10, bg = 'black', width = 575, 
	height = 60, padx = 0, relief = SUNKEN)
DATAFRAME_ONE.pack(side = TOP, expand = True, fill = BOTH)

HEAD_BOX = Label(DATAFRAME_ONE, bg = 'black', bd = 0, relief = RAISED, text = 'MISSION BOARD',
              wraplength = 800, font = 'system 18 ', padx = 2, pady = 20, fg = 'green2', anchor = W,
              height = 0)
      
HEAD_BOX.pack(side = TOP)

DATAFRAME_TWO = LabelFrame(DATAFRAME, bd = 7, bg = 'grey', width = 400, height = 540,
                              padx = 5, relief = SUNKEN, pady = 10, text = 'TASK-MASTER',
                              font = 'system 10 bold', fg = 'grey30')

DATAFRAME_TWO.pack_propagate(0)

DATAFRAME_TWO.pack(side = LEFT, fill = BOTH, expand = True)

DATAFRAME_TWO_D = Frame(DATAFRAME_TWO, bd = 4, bg = 'black', width = 10, height = 5,
                                   padx = 5, pady = 5, relief = RAISED)
DATAFRAME_TWO_D.pack(side = TOP, fill = BOTH, expand = True)

DATAFRAME_THREE = LabelFrame(DATAFRAME, bd = 7, bg = 'grey',
                                     width = 310, height = 540,
                                      padx = 5, relief = SUNKEN,
                                       text = 'ELECTRICITY', font = 'System 10 bold', 
                                       fg = 'grey30', pady = 5)

DATAFRAME_THREE.pack_propagate(0)

DATAFRAME_THREE.pack(side = RIGHT)

########################################################################################
DATAFRAME_THREE_A = Frame(DATAFRAME_THREE, bd = 7, bg = 'black', width = 300, height = 41,
                              padx = 5, relief = SUNKEN)
DATAFRAME_THREE_A.pack_propagate(0) 
s = ttk.Style()
s.theme_use('alt')
s.configure('red.Horizontal.TProgressbar', background = 'green1', troughcolor = 'black',
                bordercolor = 'black', darkcolor = 'black')
progressA = ttk.Progressbar(DATAFRAME_THREE_A, style = 'red.Horizontal.TProgressbar', 
    orient = HORIZONTAL, length = 260, mode = 'determinate')
progressA['value'] = 0
progressA.pack(pady = 4)
DATAFRAME_THREE_A.pack(side = TOP)

########################################################################################
DATAFRAME_THREE_B = Frame(DATAFRAME_THREE, bd = 7, bg = 'black', width = 300, height = 41,
                    padx = 5, relief = SUNKEN)
DATAFRAME_THREE_B.pack_propagate(0) 

progressB = ttk.Progressbar(DATAFRAME_THREE_B, style = 'red.Horizontal.TProgressbar', 
    orient = HORIZONTAL, length = 260, mode = 'determinate')
progressB['value'] = 0

DATAFRAME_THREE_B.pack(side = TOP)
progressB.pack(pady = 4)

########################################################################################
DATAFRAME_THREE_C = Frame(DATAFRAME_THREE, bd = 7, bg = 'black', width = 300, height = 41,
                              padx = 5, relief = SUNKEN)
DATAFRAME_THREE_C.pack_propagate(0)

progressC = ttk.Progressbar(DATAFRAME_THREE_C, style = 'red.Horizontal.TProgressbar', 
    orient = HORIZONTAL, length = 260, mode = 'determinate')
progressC['value'] = 0

DATAFRAME_THREE_C.pack(side = TOP)
progressC.pack(pady = 4)

########################################################################################
DATAFRAME_THREE_D = Frame(DATAFRAME_THREE, bd = 7, bg = 'black', width = 300, height = 41,
                              padx = 5, relief = SUNKEN)
DATAFRAME_THREE_D.pack_propagate(0)
progressD = ttk.Progressbar(DATAFRAME_THREE_D, style = 'red.Horizontal.TProgressbar', 
    orient = HORIZONTAL, length = 260, mode = 'determinate')
progressD['value'] = 0

DATAFRAME_THREE_D.pack(side = TOP)
progressD.pack(pady = 4)

########################################################################################

DATAFRAME_THREE_E = Frame(DATAFRAME_THREE, bd = 7, bg = 'black', width = 300, height = 41,
                              padx = 5, relief = SUNKEN)
DATAFRAME_THREE_E.pack_propagate(0)

progressE = ttk.Progressbar(DATAFRAME_THREE_E, style = 'red.Horizontal.TProgressbar', 
    orient = HORIZONTAL, length = 260, mode = 'determinate')
progressE['value'] = 0

DATAFRAME_THREE_E.pack(side = TOP)
progressE.pack(pady = 4)
########################################################################################
DATAFRAME_THREE_F = Frame(DATAFRAME_THREE, bd = 7, bg = 'black', width = 300, height = 41,
                              padx = 5, relief = SUNKEN)
DATAFRAME_THREE_F.pack_propagate(0)

progressF = ttk.Progressbar(DATAFRAME_THREE_F, style = 'red.Horizontal.TProgressbar', 
    orient = HORIZONTAL, length = 260, mode = 'determinate')
progressF['value'] = 0

DATAFRAME_THREE_F.pack(side = TOP)
progressF.pack(pady = 4)
########################################################################################
DATAFRAME_THREE_G = Frame(DATAFRAME_THREE, bd = 7, bg = 'black', width = 300, height = 41,
                              padx = 5, relief = SUNKEN)
DATAFRAME_THREE_G.pack_propagate(0)

progressG = ttk.Progressbar(DATAFRAME_THREE_G, style = 'red.Horizontal.TProgressbar', 
    orient = HORIZONTAL, length = 260, mode = 'determinate')
progressG['value'] = 0

DATAFRAME_THREE_G.pack(side = TOP)
progressG.pack(pady = 4)
########################################################################################
DATAFRAME_THREE_H = Frame(DATAFRAME_THREE, bd = 7, bg = 'black', width = 300, height = 41,
                              padx = 5, relief = SUNKEN)
DATAFRAME_THREE_H.pack_propagate(0)

progressH = ttk.Progressbar(DATAFRAME_THREE_H, style = 'red.Horizontal.TProgressbar', 
    orient = HORIZONTAL, length = 260, mode = 'determinate')
progressH['value'] = 0

DATAFRAME_THREE_H.pack(side = TOP)
progressH.pack(pady = 4)
########################################################################################
DATAFRAME_THREE_I = Frame(DATAFRAME_THREE, bd = 7, bg = 'black', width = 300, height = 41,
                              padx = 5, relief = SUNKEN)
DATAFRAME_THREE_I.pack_propagate(0)

progressI = ttk.Progressbar(DATAFRAME_THREE_I, style = 'red.Horizontal.TProgressbar', 
    orient = HORIZONTAL, length = 260, mode = 'determinate')
progressI['value'] = 0

DATAFRAME_THREE_I.pack(side = TOP)
progressI.pack(pady = 4)
########################################################################################
DATAFRAME_THREE_J = Frame(DATAFRAME_THREE, bd = 7, bg = 'black', width = 300, height = 41,
                              padx = 5, relief = SUNKEN)
DATAFRAME_THREE_J.pack_propagate(0)

progressJ = ttk.Progressbar(DATAFRAME_THREE_J, style = 'red.Horizontal.TProgressbar', 
    orient = HORIZONTAL, length = 260, mode = 'determinate')
progressJ['value'] = 0

DATAFRAME_THREE_J.pack(side = TOP)
progressJ.pack(pady = 4)
########################################################################################
FRAME_ONE_OUTER = LabelFrame(MAINFRAME, bd = 7, bg = 'grey', width = 30, height = 280
                               , relief = SUNKEN, text = 'CREATIVE CORE', 
                               font = 'System 10 bold', fg = 'grey30') 

FRAME_ONE_OUTER.pack_propagate(0)

FRAME_ONE_OUTER.pack(side = TOP, fill = BOTH)

FRAME_ONE = Frame(FRAME_ONE_OUTER, bd = 7, bg = 'black', width = 10, height = 215
                               , relief = SUNKEN, padx = 5)

FRAME_ONE.pack_propagate(0)

FRAME_ONE.pack(side = TOP, fill = BOTH)

FRAME_ONE_PIC = Frame(FRAME_ONE, bd = 2, bg = 'white', 
                               relief = FLAT)
FRAME_ONE_PIC.pack(side = LEFT, padx = 2, pady = 8)

# 15. Photo Image Installation (Entry and Label Widget)
lblProfilePicture = Label(FRAME_ONE_PIC, image = Picture1,
                        width = 140, height = 180, relief = RAISED,
                        bg = 'white', bd = 1)
lblProfilePicture.pack(fill = BOTH, expand = True)

lblName = Label(FRAME_ONE, padx = 5, pady = 5, font = 'System 18 bold',
                        text = 'Lannon Khau', fg = 'green2', bg = 'black')
lblName.pack_propagate(0)
lblName.pack(side = TOP, anchor = W)


lblBlank = Label(FRAME_ONE ,padx = 5,pady = 0, font = 'System 10 bold',
                        text = '              ', fg = 'green2', bg = 'black')
lblBlank.pack(side = TOP, anchor = W)

        # 18. Add Title Label 
lblTitle = Label(FRAME_ONE ,padx = 13,pady = 0, font = 'System 10 bold',
                        text = ' Creative Core : Programmer', fg = 'green2', bg = 'black')
lblTitle.pack_propagate(0)
lblTitle.pack(side = TOP, anchor = W)

        # 19. Add Major Label 
lblMajor = Label(FRAME_ONE ,padx = 13,pady = 0, font = 'System 10 bold',
                        text = 'CSUF : Data Science Major' , fg = 'green2', bg = 'black')
lblMajor.pack(side = TOP, anchor = W)

lblEmail = Label(FRAME_ONE ,padx = 5,pady = 0, font = 'System 10 bold',
                        text = 'Vaccinated : True', fg = 'green2', bg = 'black')
lblEmail.pack(side = TOP, anchor = W)

lblDoB = Label(FRAME_ONE ,padx = 5,pady = 0, font = 'System 10 bold',
                        text = 'Mission : Raccoon Lair', fg = 'green2', bg = 'black')
lblDoB.pack(side = TOP, anchor = W)

lblLevel = Label(FRAME_ONE ,padx = 5,pady = 0, font = 'System 10 bold',
                        text = 'Level: 008', fg = 'green2', bg = 'black')
lblLevel.pack(side = TOP, anchor = W)

lblProject = Label(FRAME_ONE ,padx = 5,pady = 0, font = 'System 10 bold',
                        text = 'Project : Star Shooter', fg = 'green2', bg = 'black')
lblProject.pack(side = TOP, anchor = W)


lblBlank = Label(FRAME_ONE ,padx = 5,pady = 0, font = 'System 10 bold',
                        text = '              ', fg = 'green2', bg = 'black')
lblBlank.pack(side = TOP, anchor = W)

####################################################################################################

MID_FRAME = Frame(MAINFRAME, bd = 7, width = 400, height = 50, padx = 4, 
                        pady = 0, relief = RAISED, bg = 'black')

MID_FRAME.pack_propagate(0)

MID_FRAME.pack(side = TOP, expand = True, fill = BOTH)

OUT_BOX = Label(MID_FRAME, bg = 'black', bd = 0, relief = RAISED, text = 'VIRUS STATUS : NOT FOUND',
              wraplength = 400, font = 'system 12 ', padx = 2, pady = 20, fg = 'green2', anchor = CENTER,
              width = 100)
OUT_BOX.pack(side = TOP)

        # Add Back Button
btn_back = Button(FRAME_ONE_OUTER, text = '<<', command = back, bg = 'black', padx = 15, height = 10,
    fg = 'green2', width = 10, bd = 5)
btn_back.pack(side = LEFT, anchor = W, padx = 3)

cent_back = Button(FRAME_ONE_OUTER, text = '||', command = back, bg = 'black', padx = 15, height = 10,
    fg = 'green2', width = 11, bd = 5)
cent_back.pack(side = LEFT, anchor = CENTER, padx = 3)

        # Add Forward Button
btn_for = Button(FRAME_ONE_OUTER, text = '>>', command = lambda : forward(1), fg = 'green2', height = 10, 
    bg = 'black', width = 18, bd = 5)
btn_for.pack(side = LEFT, anchor = E, padx = 3)

####################################################################################################

FRAME_TWO = LabelFrame(MAINFRAME, bd = 7, bg = 'grey', width = 400, height = 375,
                          padx = 4, pady = 0, relief = SUNKEN, text = 'WATSON',
                               font = 'System 10 bold', fg = 'gray30')
FRAME_TWO.pack(side = TOP, fill = BOTH, expand = True)

# 23. Add Top Frame for Frame 2
FRAME_TWO_TOP = Frame(FRAME_TWO, bd = 7, bg = 'black', width = 400, height = 150,
                              padx = 2, pady = 2, relief = SUNKEN)

FRAME_TWO_TOP.pack_propagate(0)

FRAME_TWO_TOP.pack(side = TOP)

# 24. Add Bottom Frame for Frame 2
FRAME_TWO_BOT = Frame(FRAME_TWO, bd = 7, bg = 'grey', width = 400, height = 50,
                              padx = 2, pady = 2, relief = SUNKEN)

FRAME_TWO_BOT.pack_propagate(0)

FRAME_TWO_BOT.pack(side = TOP)


CANV_1 = Canvas(FRAME_TWO_TOP, width = 120,  height = 130,
                           bd = 0, bg = 'black', 
                           highlightbackground = 'black')
CANV_1.pack(side = LEFT, anchor = NW)

OUTPUT_BOX = Label(FRAME_TWO_TOP,
              text = '', bg = 'black', bd = 0, relief = RAISED,
              wraplength = 400, font = 'courier 6 bold', padx = 15, pady = 2)
      
OUTPUT_BOX.pack(side = LEFT)

        # 37. Add Input Box
INPUT_BOX = Entry(FRAME_TWO_BOT, font = 'System 12 bold',
              text = '', bg = 'black', fg = 'green2', 
               width = 34, bd = 4, relief = SUNKEN, textvariable = query)
      
INPUT_BOX.pack(side = LEFT, expand = True)

        # 38. Add Button Send
BTN_SEND = Button(FRAME_TWO_BOT, width = 5, height = 1, bd = 4,
                              font = 'system 12 bold', text = 'SEND', 
                              bg = 'black', command = send, fg = 'green2')
      
BTN_SEND.pack(side = RIGHT, anchor = E,expand = True)

events = get_events()
today = date.today()

x = 1 

for event in events:

    event_name = event[0]
    days_until = days_between_dates(event[1], today)
    display = f'{x}) {event_name} in {days_until} days'

    lblEvents = Label(DATAFRAME_TWO_D, font = 'system 10 bold',
                               text = display, padx = 5, pady = 9,
                               bg = 'black', fg = 'green2', anchor = W)
    lblEvents.pack(side = TOP, expand = True, fill= BOTH)

    x += 1

mainloop() 